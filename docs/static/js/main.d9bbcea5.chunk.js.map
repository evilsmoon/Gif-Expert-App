{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGRC,mBAAS,IAHD,mBAGrCC,EAHqC,KAGzBC,EAHyB,KAc5C,OAEI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAC,OAAKP,GAAL,mBAAmBO,OAClCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAhBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWXM,GAXW,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGjC,OACI,yBAAKc,UAAU,4CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCJHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAbAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GAEEH,EACI,CACIf,KAAMkB,EACNL,SAAS,SAK9B,CAACpB,IACGqB,EDjByBK,CAAc1B,GAAlCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,sCAAsChB,GACnDoB,GAAW,uBAAGJ,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEZnBkB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,cAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAI9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ4C,EAAWpB,KAAI,SAACT,GAAD,OACX,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,U,MCftC8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.d9bbcea5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({setCategories}) => {\n\n\n    const [inputValue, setinputValue] = useState('');\n    const handleInputChange = (e) => {\n        setinputValue(e.target.value)\n    }\n    const handelSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length >2){\n            setCategories(c => [inputValue,...c]);\n            setinputValue('');\n        }\n    }\n    return (\n\n        <form onSubmit={ handelSubmit }>  \n            <input\n                type='text'\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n\n        </form>\n    )\n}\n\nAddCategory.propTypes ={\n    setCategories: PropTypes.func.isRequired\n}\n","\nexport const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=q0nrbeOEnoT1IMzI4ivH6VbiaDsVuKd7`;\n    const resp = await fetch(url);\n    const { data } = await resp.json()\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return (gifs);\n}\n","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n\n    // console.log(id,title,url)\n    return (\n        <div className='card animate__animated animate__fadeIn  '>\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem'\n\nexport const GifGrid = ({ category }) => {\n\n    const {data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className='animate__animated animate__fadeIn '>{category}</h3>\n            {loading && <p className='animate__animated animate__flash'>loading</p>}\n            <div className='card-grid'>\n                {\n                    images.map(img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    )\n                    )\n                }\n\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n\n                    setState(\n                        {\n                            data: imgs,\n                            loading: false\n                        }\n                    )\n\n            })\n    }, [category])\n    return state;\n}\n","\nimport React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>\n\n            <ol>\n                {\n                    categories.map((category)=> (\n                        <GifGrid \n                            key={category}\n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n "],"sourceRoot":""}